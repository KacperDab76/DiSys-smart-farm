syntax = "proto3";

package farm;

service GreenhouseService {
    // for registering devices in greenhouse
    rpc registerDevice (RegisterMessage) returns (Registered);
    rpc sensorReading (stream SensorReading) returns (ReadingResult);
    rpc changeClimateSetting (stream ClimateSetting) returns (ClimateSet);
}

service GreenhouseService2 {
    rpc climateSettings(stream SensorReading) returns (stream ClimateSetting);

}

service SoilConditionService {
    rpc measurmentCondition (stream SoilConditionMessage) returns (stream changeSoilSetting);
}

service SoilConditionService {
    rpc sensorReading (stream SoilConditionMessage) returns (Reply);
    rpc turnOnOffWater (WaterMessage) returns (SprinklerReplay);
}

service SoilIrrigation{
    rpc registerDevice (RegisterMessage) returns (stream ServerRequest);
    rpc sensorReading (stream SoilConditionMessage) returns (ReadingReply);
}

service RemoteVehicle{
    // register device for broadcasts
    rpc registerDevice(RegisteringMessage) returns (stream ServerRequest);
    // get information of where to go 
    rpc getRoute (Position) returns (stream Position);
    // what task to be done at position ie. harvesting appples, tomatos,sensor reading etc
    rpc getTask (Position) returns (Task);
    // save information of finished task
    rpc recordTaskFinished (Task) returns (recordReply);
    // send status like fuel and space left in harvest box to get message to go back home
    rpc vehicleStatus (stream Status) returns (goHomeMessage);
} 

message RemoteMessage {

    string job  = 2;
}