syntax = "proto3";

package farm;

// soil irrigation service messages
service SoilIrrigationService{
    // sensors and sprinklers must register for area they are 
    // server can use his srteam to turn sprinkers on
    rpc registerDevice (RegisterArea) returns (stream ServerRequest);
    // cancel registration
    rpc cancelRegistration (Device) returns (DeviceUnregistered);

    // sensors sends reading if reading is low server sends turn on water for that are (and off)
    rpc sensorReading (stream SoilCondition) returns (ServerMessage);
    // sprinkler sends message that it's on and waits for turn off message
    rpc turnOnOffWater (SprinklerOn) returns (ConfirmOnOffWater); 
}

// this is for all services
enum Task {
    not_registerd = 0;
    registered = 1;
    soil_water_on = 2;
    soil_water_off = 3;
}

message RegisterArea{
    uint32 areaID = 1;
    // kind of device ie: sensor or sprinkler
    // use enums?
    string device = 2; 
}
// this one is universal
message ServerRequest{
    
    uint32 task = 1;
    string deviceID = 2;
    string message = 3;    

}
message SoilCondition{
    uint32 areaID = 1;
    // uint32 soil = 2;
    uint32 soil_humidity = 2;
    
}
message Device {
    string deviceID = 1;
}
message DeviceUnregistered {
    uint32 status = 1;
    string deviceID = 2;
}
message ServerMessage{
    string task = 1;
}
message SprinklerOn{
    bool water_on = 1;
    string deviceID = 2;
}
message ConfirmOnOffWater{
    bool confirm = 1;
} 